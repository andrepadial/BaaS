USE AB_PAGAMENTO_INSTANTANEO
GO


CREATE OR ALTER PROCEDURE BAAS_PIX_COMPROVANTE (@DATACORTE AS DATETIME, @NUMEROCONTA VARCHAR(15), 
							@EndToEnd VARCHAR(100) = NULL) AS

BEGIN

	SELECT		
			CASE WHEN END_TO_END LIKE 'E%' THEN 'Normal' ELSE 'Devolucao' END AS Tipo,			
			END_TO_END AS EndToEnd,
			'Efetivado' AS StatusPix,
			'Interno' AS Natureza,
			COD_ISPB_ORIGEM AS ISPBOrigem,
			COD_AGENCIA_ORIGEM AS AgOrigem,
			NRO_CONTA_ORIGEM AS ContaOrigem,
			CPF_CNPJ_ORIGEM AS CpfCnpjOrigem,
			NOME_ORIGEM AS NomeOrigem,
			COD_ISPB_DESTINO AS ISPBDestino,
			COD_AGENCIA_DESTINO AS AgDestino,
			NRO_CONTA_DESTINO AS ContaDestino,
			CPF_CNPJ_DESTINO AS CpfCnpjDestino,
			NOME_DESTINO AS Destinatario,
			DATA_HORA_REGISTRO AS DataHoraMovimento,
			ISNULL(CHAVE_ENDERECAMENTO, '') AS ChaveEnderecamento,
			ISNULL(CAMPO_LIVRE, '') AS CampoLivre,
			ISNULL(FINALIDADE_TRANSACAO, '') AS Finalidade,
			ISNULL(ORIGEM_MOVIMENTO, '') AS OrigemMovimento,
			CAST(VALOR AS NUMERIC(21,2)) AS Valor
	FROM	MOVIMENTOS_INTERNOS WITH(NOLOCK)
	WHERE	DATA_HORA_REGISTRO >= @DATACORTE
	AND		(NRO_CONTA_ORIGEM = @NUMEROCONTA OR NRO_CONTA_DESTINO = @NUMEROCONTA)	
	AND		(@EndToEnd IS NULL OR END_TO_END = @EndToEnd)
	AND		NRO_MOVIMENTO_TRANSFERENCIA >= 0

	UNION

	SELECT		
			CASE WHEN END_TO_END LIKE 'E%' THEN 'Normal' ELSE 'Devolucao' END AS Tipo,			
			END_TO_END AS EndToEnd,
			'Não Efetivado' AS StatusPix,
			'Interno' AS Natureza,
			COD_ISPB_ORIGEM AS ISPBOrigem,
			COD_AGENCIA_ORIGEM AS AgOrigem,
			NRO_CONTA_ORIGEM AS ContaOrigem,
			CPF_CNPJ_ORIGEM AS CpfCnpjOrigem,
			NOME_ORIGEM AS NomeOrigem,
			COD_ISPB_DESTINO AS ISPBDestino,
			COD_AGENCIA_DESTINO AS AgDestino,
			NRO_CONTA_DESTINO AS ContaDestino,
			CPF_CNPJ_DESTINO AS CpfCnpjDestino,
			NOME_DESTINO AS Destinatario,
			DATA_HORA_REGISTRO AS DataHoraMovimento,
			ISNULL(CHAVE_ENDERECAMENTO, '') AS ChaveEnderecamento,
			ISNULL(CAMPO_LIVRE, '') AS CampoLivre,
			ISNULL(FINALIDADE_TRANSACAO, '') AS Finalidade,
			ISNULL(ORIGEM_MOVIMENTO, '') AS OrigemMovimento,
			CAST(VALOR AS NUMERIC(21,2)) AS Valor
	FROM	MOVIMENTOS_INTERNOS_RECUSADOS WITH(NOLOCK)
	WHERE	DATA_HORA_REGISTRO >= @DATACORTE
	AND		(NRO_CONTA_ORIGEM = @NUMEROCONTA OR NRO_CONTA_DESTINO = @NUMEROCONTA)	
	AND		(@EndToEnd IS NULL OR END_TO_END = @EndToEnd)
	
	UNION

	SELECT	CASE WHEN C.END_TO_END LIKE 'E%' THEN 'Normal' ELSE 'Devolucao' END AS Tipo,			
			C.END_TO_END AS EndToEnd,
			SO1.STATUS_ORDEM_PAGAMENTO AS StatusPix,
			'Débito' AS Natureza,
			C.COD_ISPB AS ISPBOrigem,
			C.COD_AGENCIA AS AgOrigem,
			C.NRO_CONTA AS ContaOrigem,
			C.CPF_CNPJ AS CpfCnpjOrigem,
			C.NOME AS NomeOrigem,
			C.COD_ISPB_CONTRA_PARTE AS ISPBDestino,
			C.COD_AGENCIA_CONTRA_PARTE AS AgDestino,
			C.NRO_CONTA_CONTRA_PARTE AS ContaDestino,
			C.CPF_CNPJ_CONTRA_PARTE AS CpfCnpjDestino,
			C.NOME_CONTRA_PARTE AS Destinatario,
			C.DATA_HORA_REGISTRO AS DataHoraMovimento,
			ISNULL(C.CHAVE_ENDERECAMENTO, '') AS ChaveEnderecamento,
			ISNULL(C.CAMPO_LIVRE, '') AS CampoLivre,
			ISNULL(C.FINALIDADE_TRANSACAO, '') AS Finalidade,
			ISNULL(C.ORIGEM_MOVIMENTO, '') AS OrigemMovimento,
			CAST(C.VALOR AS NUMERIC(21,2)) AS Valor
	FROM		BLOQUEIO_ORDEM_PAGAMENTO C INNER JOIN ORDEM_PAGAMENTO O ON O.ID = C.ID_ORDEM_PAGAMENTO
				LEFT JOIN (	SELECT		MAX(ID) AS ID, ID_ORDEM_PAGAMENTO 
							FROM		STATUS_ORDEM_PAGAMENTO WITH(NOLOCK)
							WHERE		DATA_HORA_REGISTRO >= @DataCorte						
							GROUP BY	ID_ORDEM_PAGAMENTO
						 ) AS SO ON SO.ID_ORDEM_PAGAMENTO = C.ID_ORDEM_PAGAMENTO
				LEFT JOIN STATUS_ORDEM_PAGAMENTO SO1 ON SO1.ID = SO.ID
	WHERE		C.DATA_HORA_REGISTRO >= @DATACORTE	
	AND			O.DATA_HORA_REGISTRO >= @DataCorte
	AND			SO1.DATA_HORA_REGISTRO >= @DataCorte
	AND			C.NRO_CONTA = @NUMEROCONTA
	AND			(@EndToEnd IS NULL OR C.END_TO_END = @EndToEnd)

	UNION

	SELECT	CASE WHEN C.END_TO_END LIKE 'E%' THEN 'Normal' ELSE 'Devolucao' END AS Tipo,			
			C.END_TO_END AS EndToEnd,
			SC1.STATUS_ANOTACAO_CREDITO AS StatusPix,
			'Crédito' AS Natureza,
			C.COD_ISPB_CONTRA_PARTE AS ISPBOrigem,
			C.COD_AGENCIA_CONTRA_PARTE AS AgOrigem,
			C.NRO_CONTA_CONTRA_PARTE AS ContaOrigem,
			C.CPF_CNPJ_CONTRA_PARTE AS CpfCnpjOrigem,
			C.NOME_CONTRA_PARTE AS NomeOrigem,
			C.COD_ISPB AS ISPBDestino,
			C.COD_AGENCIA AS AgDestino,
			C.NRO_CONTA AS ContaDestino,
			C.CPF_CNPJ AS CpfCnpjDestino,
			C.NOME AS Destinatario,
			C.DATA_HORA_REGISTRO AS DataHoraMovimento,
			ISNULL(C.CHAVE_ENDERECAMENTO, '') AS ChaveEnderecamento,
			ISNULL(C.CAMPO_LIVRE, '') AS CampoLivre,
			ISNULL(C.FINALIDADE_TRANSACAO, '') AS Finalidade,
			ISNULL(C.ORIGEM_MOVIMENTO, '') AS OrigemMovimento,
			CAST(C.VALOR AS NUMERIC(21,2)) AS Valor	
	FROM	ANOTACAO_CREDITO C
				LEFT JOIN (	SELECT		MAX(ID) AS ID, END_TO_END AS EndToEnd 
							FROM		STATUS_ANOTACAO_CREDITO WITH(NOLOCK)
							WHERE		DATA_HORA_REGISTRO >= @DataCorte						
							GROUP BY	END_TO_END
						 ) AS SC ON SC.EndToEnd = C.END_TO_END
				LEFT JOIN STATUS_ANOTACAO_CREDITO SC1 ON SC1.ID = SC.ID
	WHERE		C.DATA_HORA_REGISTRO >= @DataCorte
	AND			SC1.DATA_HORA_REGISTRO >= @DataCorte
	AND			C.NRO_CONTA = @NUMEROCONTA
	AND			(@EndToEnd IS NULL OR C.END_TO_END = @EndToEnd)

	ORDER BY	DataHoraMovimento, EndToEnd

END